1.ในไฟล์ jaruad1.py
มีคลาสเดียว (ตรงนี้โคตรทุเรศ แต่เอาเหอะ) คือ spacegamewindow
 ฟังก์ชันข้างในมี
 1.init = set ค่าเริ่มทั้งหมดในเกม (ความกว้างจอ สีพื้นหลัง สถานะตัวคนเล่น level etc.) และ สร้างlist สำหรับเก็บ
unit ทั้งหมดที่อยู่ในเกม แบ่งเป็น all คือเก็บทุกอย่างเพื่อไว้วาดในคำสั่งเดียว และแบ่งเป็นชนิดต่างๆ เช่น กระสุนของผู้เล่น กระสุนของศัตรู
ศัตรู และอื่นๆแยกไว้เพื่อใช้ check collision ในภายหลัง
 2.on draw = คำสั่งใช้วาดทุกอย่างตั้งแต่ตัวอะไรก็แล้วแต่ภายในเกมไปจนถึงกระดานคะแนน hpคนเล่น ,hp boss เป็นต้น
 3.update = ใช้ update ทุกสิ่งทุกอย่างในเกมตามสถานะ level และ อัตราการเกิดของศัตรูตาม framecount ที่กำหนดไว้
เช่น ถ้า level = 3 จะปล่อยเครื่องบินออกมา (if self.score>=100:self.lv3 = True)
ด้วยอัตราการเกิด 1 ตัวทุกๆ 36 frame (if self.framecount%36==0 and self.lv3 == True)
และทำหน้าที่ check collision ไปในตัว เช่น ถ้าตัวคนเล่นโดนกระสุนศัตรูยิงเลือดจะลด1
   hit = arcade.check_for_collision_with_list(self.player_sprite,self.enemy_bullet_sprites_list)
   if len(hit)!=0:
	for enemybullet in hit:
	    self.hp-=1
	    enemybullet.kill()
และในตัว update จะมีฟังก์ชันย่อยคอยทำหน้าที่อื่นอีกด้วย เช่น
spawnenemy(ชื่อศัตรู,hpของศัตรูตัวนั้น,damageเวลาชนผู้เล่น,คะแนนที่ได้เมื่อฆ่าสำเร็จ) ใช้ปล่อยศัตรูรูปแบบต่างๆกันออกมาตามค่าที่รับเข้าไป

2.ในไฟล์ models.py
เก็บรูปแบบการเคลื่อนไหวของโมเดลแบบต่างๆของแต่ละตัว และบางโมเดลจะเก็บค่าตำแหน่งเริ่มต้นของตัวโมเดลเอาไว้ด้วยถ้าตำแหน่งไม่ได้ขึ้นอยู่กับ unit ตัวอื่นๆ (เช่น กระสุนต่างๆ) และที่สำคัญมากๆคือต้อง kill
ตัวเองเมื่อทะลุจอออกไปแล้วยกเว้นตัวคนเล่นจะวนกลับไปอีกด้านในแกนxและติดเพดานบนล่างในแกนy